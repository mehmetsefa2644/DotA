Object subclass: #DotA	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!DotA commentStamp: 'mehmetsefa 4/27/2017 23:35' prior: 0!I am DotA.!!DotA methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 4/28/2017 01:01'!initialize! !DotA subclass: #GameArena	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!GameArena commentStamp: 'mehmetsefa 4/26/2017 14:05' prior: 0!I am GameArena.!!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!scourgePickHero: anObject	scourgePickHero := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!scourgePickHero	^ scourgePickHero! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:02'!initialize! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!sentinelPickItem: anObject	sentinelPickItem := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!sentinelPickHero: anObject	sentinelPickHero := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!sentinelPickHero	^ sentinelPickHero! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!sentinelPickItem	^ sentinelPickItem! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!start	^ start! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!gameOver	^ gameOver! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!sentinelTurn: anObject	sentinelTurn := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!scourgePickItem	^ scourgePickItem! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!scourgeTurn: anObject	scourgeTurn := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!scourgeTurn	^ scourgeTurn! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!gameOver: anObject	gameOver := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!start: anObject	start := anObject! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!sentinelTurn	^ sentinelTurn! !!GameArena methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:58'!scourgePickItem: anObject	scourgePickItem := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameArena class	instanceVariableNames: ''!!GameArena class methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 02:13'!start "Main method of the game"|firstPlayer secondPlayer|Transcript clear.Transcript open."Choose first hero"firstPlayer := GameArena chooseFirstPlayer.Transcript show: ('Player1 chose ', firstPlayer asString);cr."Choose second hero"secondPlayer := GameArena chooseSecondPlayer.Transcript show: ('Player2 chose ', secondPlayer asString);cr."Choose first player's items"GameArena showChooseItem: firstPlayer ."Choose second player's items"GameArena showChooseItem: secondPlayer ."Play loop of the game"GameArena play: firstPlayer second: secondPlayer ."If HP of an hero is below zero, the game ends".Transcript show:'The game is finished';cr.(firstPlayer hp > secondPlayer hp)ifTrue: [ Transcript show:'Winner is Player1!!'.] ifFalse: [ Transcript show:'Winner is Player2!!'. ]! !!GameArena class methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 02:20'!itemList: player"Returns the item list that is dynamic showing an item is affordable or not"^{(player gold >= (BattleFury new) gold ) ifTrue: ['Battle Fury'] ifFalse: [ ' CAN NOT AFFORD Battle Fury' ] . (player gold >= (Butterfly new) gold ) ifTrue: ['Butterfly'] ifFalse: [ ' CAN NOT AFFORD Butterfly' ]  . (player gold >= (Daedalus new) gold ) ifTrue: ['Daedalus'] ifFalse: [ ' CAN NOT AFFORD Daedalus' ]  . (player gold >= (Desolator new) gold ) ifTrue: ['Desolator'] ifFalse: [ ' CAN NOT AFFORD Desolator' ] . (player gold >= (EnergyBooster new) gold ) ifTrue: ['EnergyBooster'] ifFalse: [ ' CAN NOT AFFORD EnergyBooster' ] .(player gold >= (HealthPotion new) gold ) ifTrue: ['HealthPotion'] ifFalse: [ ' CAN NOT AFFORD HealthPotion' ]  . (player gold >= (HeartOfTarrasque new) gold ) ifTrue: ['HearthOfTarrasque'] ifFalse: [ ' CAN NOT AFFORD HearthOfTarrasque' ] . (player gold >= (HoodOfDefiance new) gold ) ifTrue: ['HoodOfDefiance'] ifFalse: [ ' CAN NOT AFFORD HoodOfDefiance' ] . (player gold >= (ManaPotion new) gold ) ifTrue: ['ManaPotion'] ifFalse: [ ' CAN NOT AFFORD ManaPotion' ] . (player gold >= (Vanguard new) gold ) ifTrue: ['Vanguard'] ifFalse: [ ' CAN NOT AFFORD Vanguard' ] . (player gold >= (VitalityBooster new) gold ) ifTrue: ['VitalityBooster'] ifFalse: [ ' CAN NOT AFFORD VitalityBooster' ]}.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:37'!play: firstPlayer second: secondPlayer"This method is loop of the game. Turn based actions are implemented here"|actionList1 action1 actionList2 action2 | GameArena checkBoosters: firstPlayer. GameArena checkBoosters: secondPlayer.Transcript show: 'The game is started...';cr.firstPlayer lastAction: ' '.secondPlayer lastAction: ' ' .[((firstPlayer hp) > 0) & ((secondPlayer hp) > 0)]whileTrue: [GameArena showTranscript1: firstPlayer .GameArena showTranscript2: secondPlayer .actionList1 := (GameArena actionList: firstPlayer) .action1 := UIManager default chooseFrom: actionList1 message: 'Choose action for Player1 (',(firstPlayer name), ')' .action1 = 1ifTrue: [ secondPlayer  hp:(secondPlayer hp - (firstPlayer damage:(firstPlayer damage) enemyarmor:(secondPlayer armor))).			firstPlayer lastAction: 'Attack'.			].action1 = 2ifTrue: [ (firstPlayer healthPot > 0) ifTrue: [ firstPlayer hp: (firstPlayer hp + 300). firstPlayer healthPot: (firstPlayer healthPot - 1)].			firstPlayer lastAction: 'Health Potion'.		].action1 = 3ifTrue: [ (firstPlayer manaPot > 0) ifTrue: [ firstPlayer mana: (firstPlayer mana + 300). firstPlayer manaPot: (firstPlayer manaPot - 1)].			firstPlayer lastAction: 'Mana Potion'.	].action1 = 4ifTrue: [ 	GameArena action1For4: firstPlayer second: secondPlayer.	].action1 = 5ifTrue: [ 	GameArena action1For5: firstPlayer second: secondPlayer.	 ].		"passive skills"	((firstPlayer skill2 skillName) = 'VampiricAura') ifTrue: [		firstPlayer hp: (firstPlayer hp + (0.15 * (firstPlayer damage:(firstPlayer damage) enemyarmor:(secondPlayer armor))) roundTo: 1).		]. 	((firstPlayer skill1 skillName) = 'Blur') ifTrue: [				].actionList2 := (GameArena actionList: secondPlayer) .action2 := UIManager default chooseFrom: actionList2 message: 'Choose action for Player2 (',(secondPlayer  name), ')' .action2 = 1ifTrue: [ firstPlayer   hp: (firstPlayer hp - (secondPlayer  damage:(secondPlayer  damage) enemyarmor:(firstPlayer  armor))).			secondPlayer lastAction: 'Attack'.		].action2 = 2ifTrue: [ (secondPlayer healthPot > 0) ifTrue: [secondPlayer hp: (secondPlayer hp + 300). secondPlayer healthPot: (secondPlayer healthPot - 1)].			secondPlayer lastAction: 'Health Potion'.	].action2 = 3ifTrue: [ (secondPlayer manaPot > 0) ifTrue: [secondPlayer mana: (secondPlayer mana + 300)]. secondPlayer manaPot: (secondPlayer manaPot - 1).			secondPlayer lastAction: 'Mana Potion'.	].action2 = 4ifTrue: [ 	GameArena action2For4: firstPlayer second: secondPlayer.	].action2 = 5ifTrue: [	GameArena action2For5: firstPlayer second: secondPlayer.	].	"passive skills"	((secondPlayer skill1 skillName) = 'ManaBreak') ifTrue: [		firstPlayer mana: (firstPlayer mana - 100).		].			GameArena checkItems: firstPlayer second: secondPlayer.	GameArena checkItems: secondPlayer  second: firstPlayer.  		GameArena checkCoolDownSkill1: firstPlayer .	GameArena checkCoolDownSkill2: secondPlayer .	GameArena checkCoolDownSkill1: secondPlayer .	GameArena checkCoolDownSkill2: firstPlayer .].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:17'!checkCoolDownSkill1: player"This method handles coolDown decrement for first skills"(player skill1 coolDown > 0) ifTrue: [ player skill1 coolDown: (player skill1 coolDown - 1).].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:35'!showTranscript1: firstPlayer"shows transcript at each turn"Transcript cr;show: 'Player1 ';cr.Transcript show: 'Hero: ', firstPlayer name;cr.Transcript show:(firstPlayer hp);show:' / ';show:(firstPlayer maxHp);show:(' HP');cr. Transcript show:(firstPlayer mana);show:' / ';show:(firstPlayer maxMana);show:(' Mana');cr.Transcript show:'Last Action: ', firstPlayer lastAction;cr.Transcript show:'Remaining Potions: '.(firstPlayer healthPot > 0) ifTrue: [ 		Transcript show:(firstPlayer healthPot);show:' Health  '.	 ].(firstPlayer manaPot > 0) ifTrue: [ 		Transcript show:(firstPlayer manaPot);show:' Mana.'.	 ].(firstPlayer healthPot = 0 & firstPlayer manaPot = 0) ifTrue: [ 		Transcript show:'None '.	 ]. Transcript cr;show: 'Skills in Cooldown: '.(firstPlayer skill1 coolDown > 0) ifTrue: [ 		Transcript show:(firstPlayer skill1 name);show: ' (not available for ',firstPlayer skill1 coolDown asString, ' turns)';cr;show: '                     '.	 ].(firstPlayer skill2 coolDown > 0) ifTrue: [ 		Transcript show:(firstPlayer skill2 name);show: ' (not available for ',firstPlayer skill2 coolDown asString, ' turns)';cr.	 ].(firstPlayer skill1 coolDown = 0 & firstPlayer skill2 coolDown = 0) ifTrue: [ 		Transcript show:'None ';cr.	 ]. ! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:32'!action2For4: firstPlayer second: secondPlayer"This function runs if secondPlayer choose its skill1 as action"| |((secondPlayer skill1 skillName) = 'StormHammer') & (StormHammer new manaUsage <= firstPlayer mana ) & (secondPlayer skill1 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 325).		secondPlayer mana: (secondPlayer mana - 140).		secondPlayer skill1 coolDown: (secondPlayer skill1 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill1 skillName).		].	((secondPlayer skill1 skillName) = 'Fissure') & (Fissure new manaUsage <= firstPlayer mana ) & (secondPlayer skill1 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 260).		secondPlayer mana: (secondPlayer mana - 170).		secondPlayer skill1 coolDown: (secondPlayer skill1 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill1 skillName).		].	((secondPlayer skill1 skillName) = 'StarStorm') & (StarStorm new manaUsage <= firstPlayer mana ) & (secondPlayer skill1 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 300).		secondPlayer mana: (secondPlayer mana - 160).		secondPlayer skill1 coolDown: (secondPlayer skill1 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill1 skillName).		].	((secondPlayer skill1 skillName) = 'FrostBite') & (FrostBite new manaUsage <= firstPlayer mana ) & (secondPlayer skill1 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 300).		secondPlayer mana: (secondPlayer mana - 150).		secondPlayer skill1 coolDown: (secondPlayer skill1 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill1 skillName).		].	((secondPlayer skill1 skillName) = 'FireBlast') & (FireBlast new manaUsage <= firstPlayer mana ) & (secondPlayer skill1 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 220).		secondPlayer mana: (secondPlayer mana - 225).		secondPlayer skill1 coolDown: (secondPlayer skill1 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill1 skillName).		].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:36'!showTranscript2: secondPlayer"shows transcript at each turn"Transcript cr;show: 'Player2 ';cr.Transcript show: 'Hero: ', secondPlayer name;cr.Transcript show:(secondPlayer hp);show:' / ';show:(secondPlayer maxHp);show:(' HP');cr. Transcript show:(secondPlayer mana);show:' / ';show:(secondPlayer maxMana);show:(' Mana');cr.Transcript show:'Last Action: ', secondPlayer lastAction;cr.Transcript show:'Remaining Potions: '.(secondPlayer healthPot > 0) ifTrue: [ 		Transcript show:(secondPlayer healthPot);show:' Health '.	 ].(secondPlayer manaPot > 0) ifTrue: [ 		Transcript show:(secondPlayer manaPot);show:' Mana.'.	 ].(secondPlayer healthPot = 0 & secondPlayer manaPot = 0) ifTrue: [ 		Transcript show:'None '.	 ]. Transcript cr;show: 'Skills in Cooldown: '.(secondPlayer skill1 coolDown > 0) ifTrue: [ 		Transcript show:(secondPlayer skill1 name);show: ' (not available for ',secondPlayer skill1 coolDown asString, ' turns)';cr;show: '                     '.	 ].(secondPlayer skill2 coolDown > 0) ifTrue: [ 		Transcript show:(secondPlayer skill2 name);show: ' (not available for ',secondPlayer skill2 coolDown asString, ' turns)';cr.	 ].(secondPlayer skill1 coolDown = 0 & secondPlayer skill2 coolDown = 0) ifTrue: [ 		Transcript show:'None ';cr.	 ]. ! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:18'!checkItems: player second: secondplayer"This method handles the item's effects"player item1 isNotNil ifTrue: [ 	((player item1) isMemberOf: BattleFury) ifTrue: [ player mana: (player mana + 50). secondplayer hp: (secondplayer hp - 55)].	((player item1) isMemberOf: HoodOfDefiance) ifTrue: [ ].	((player item1) isMemberOf: Butterfly) ifTrue: [ secondplayer hp: (secondplayer hp - 30)].	((player item1) isMemberOf: Daedalus) ifTrue: [ secondplayer hp: (secondplayer hp - 75)].	((player item1) isMemberOf: Desolator) ifTrue: [secondplayer hp: (secondplayer hp - 50)].	((player item1) isMemberOf: Vanguard) ifTrue: [ ].	((player item1) isMemberOf: HeartOfTarrasque) ifTrue: [ ].	].player item2 isNotNil ifTrue: [ 	((player item1) isMemberOf: BattleFury) ifTrue: [ player mana: (player mana + 50). secondplayer hp: (secondplayer hp - 55)].	((player item1) isMemberOf: HoodOfDefiance) ifTrue: [ ].	((player item1) isMemberOf: Butterfly) ifTrue: [ secondplayer hp: (secondplayer hp - 30)].	((player item1) isMemberOf: Daedalus) ifTrue: [ secondplayer hp: (secondplayer hp - 75)].	((player item1) isMemberOf: Desolator) ifTrue: [secondplayer hp: (secondplayer hp - 50)].	((player item1) isMemberOf: Vanguard) ifTrue: [ ].	((player item1) isMemberOf: HeartOfTarrasque) ifTrue: [ ].	].player item3 isNotNil ifTrue: [ 	((player item1) isMemberOf: BattleFury) ifTrue: [ player mana: (player mana + 50). secondplayer hp: (secondplayer hp - 55)].	((player item1) isMemberOf: HoodOfDefiance) ifTrue: [ ].	((player item1) isMemberOf: Butterfly) ifTrue: [ secondplayer hp: (secondplayer hp - 30)].	((player item1) isMemberOf: Daedalus) ifTrue: [ secondplayer hp: (secondplayer hp - 75)].	((player item1) isMemberOf: Desolator) ifTrue: [secondplayer hp: (secondplayer hp - 50)].	((player item1) isMemberOf: Vanguard) ifTrue: [ ].	((player item1) isMemberOf: HeartOfTarrasque) ifTrue: [ ].	].player item4 isNotNil ifTrue: [ 	((player item1) isMemberOf: BattleFury) ifTrue: [ player mana: (player mana + 50). secondplayer hp: (secondplayer hp - 55)].	((player item1) isMemberOf: HoodOfDefiance) ifTrue: [ ].	((player item1) isMemberOf: Butterfly) ifTrue: [ secondplayer hp: (secondplayer hp - 30)].	((player item1) isMemberOf: Daedalus) ifTrue: [ secondplayer hp: (secondplayer hp - 75)].	((player item1) isMemberOf: Desolator) ifTrue: [secondplayer hp: (secondplayer hp - 50)].	((player item1) isMemberOf: Vanguard) ifTrue: [ ].	((player item1) isMemberOf: HeartOfTarrasque) ifTrue: [ ].	].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:16'!checkBoosters: player"This method handles boosters that increase maxHP of a hero"player item1 isNotNil ifTrue: [ 	(player item1 isMemberOf: EnergyBooster) ifTrue: [ player mana: (player mana + 250). player maxMana: (player maxMana + 250). ].	(player item1 isMemberOf: VitalityBooster) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250). ].	(player item1 isMemberOf: Vanguard) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	(player item1 isMemberOf: HeartOfTarrasque) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	 ].player item2 isNotNil ifTrue: [ 	(player item2 isMemberOf: EnergyBooster) ifTrue: [ player mana: (player mana + 250). player maxMana: (player maxMana + 250). ]. 	(player item2 isMemberOf: VitalityBooster) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250). ].	(player item2 isMemberOf: Vanguard) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	(player item2 isMemberOf: HeartOfTarrasque) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	].player item3 isNotNil ifTrue: [ 	(player item3 isMemberOf: EnergyBooster) ifTrue: [ player mana: (player mana + 250). player maxMana: (player maxMana + 250). ]. 	(player item3 isMemberOf: VitalityBooster) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250). ].	(player item3 isMemberOf: Vanguard) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	(player item3 isMemberOf: HeartOfTarrasque) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	].player item4 isNotNil ifTrue: [ 	(player item4 isMemberOf: EnergyBooster) ifTrue: [ player mana: (player mana + 250). player maxMana: (player maxMana + 250). ].	(player item4 isMemberOf: VitalityBooster) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250). ].	(player item4 isMemberOf: Vanguard) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	(player item4 isMemberOf: HeartOfTarrasque) ifTrue: [ player hp: (player hp + 250). player maxHp: (player maxHp + 250)].	 ].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:19'!chooseItem: player item: item"This method handles the addition of chosen items to the heros item list"player setItemList: (item new) number: player. 	player gold: (player gold - (item new gold)).! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:16'!actionList: player"This method returns the action list of a player"^{'Attack'. (player healthPot > 0)ifTrue: [ 'Use Health Potion (Remaining = ', player healthPot asString, ' )'  ] ifFalse: ['No Health Potion'].(player manaPot > 0) ifTrue: [ 'Use Mana Potion (Remaining = ', player manaPot  asString, ' )' ] ifFalse: ['No Mana Potion' ]. (player skill1 type) = 'passive' ifTrue: [ player skill1 asString, ' (passive)'] ifFalse: [ (player skill1 manaUsage < player mana ) ifTrue: [ (player skill1 coolDown) > 0 ifTrue:['COOLING DOWN ', player skill1 asString] ifFalse:[player skill1 asString] ] ifFalse: [ 'NOT ENOUGH MANA FOR ', player skill1 asString] ] . (player skill2 type) = 'passive' ifTrue: [ player skill2 asString, ' (passive)' ] ifFalse: [ (player skill2 manaUsage < player mana ) ifTrue: [ (player skill2 coolDown) > 0 ifTrue:['COOLING DOWN ', player skill2 asString] ifFalse:[player skill2 asString] ] ifFalse: [ 'NOT ENOUGH MANA FOR ', player skill2 asString] ] }.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:31'!action1For4: firstPlayer second: secondPlayer"This function runs if firstPlayer choose its skill1 as action"| |((firstPlayer skill1 skillName) = 'WraithfireBlast') & (WraithfireBlast new manaUsage <= firstPlayer mana ) & (firstPlayer skill1 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 300).		firstPlayer mana: (firstPlayer mana - 140).		firstPlayer skill1 coolDown: (firstPlayer skill1 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill1 skillName).		].	((firstPlayer skill1 skillName) = 'AnchorSmash') & (AnchorSmash new manaUsage <= firstPlayer mana ) & (firstPlayer skill1 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 225).		firstPlayer mana: (firstPlayer mana - 60).		firstPlayer skill1 coolDown: (firstPlayer skill1 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill1 skillName).		].	((firstPlayer skill1 skillName) = 'Impale') & (Impale new manaUsage <= firstPlayer mana ) & (firstPlayer skill1 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 260).		firstPlayer mana: (firstPlayer mana - 225).		firstPlayer skill1 coolDown: (firstPlayer skill1 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill1 skillName).		].	((firstPlayer skill1 skillName) = 'EarthSpike') & (EarthSpike new manaUsage <= firstPlayer mana ) & (firstPlayer skill1 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 260).		firstPlayer mana: (firstPlayer mana - 160).		firstPlayer skill1 coolDown: (firstPlayer skill1 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill1 skillName).		].	((firstPlayer skill1 skillName) = 'SplitEarth') & (SplitEarth new manaUsage <= firstPlayer mana ) & (firstPlayer skill1 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 300).		firstPlayer mana: (firstPlayer mana - 160).		firstPlayer skill1 coolDown: (firstPlayer skill1 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill1 skillName).		].	! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:31'!action1For5: firstPlayer second: secondPlayer"This function runs if firstPlayer choose its skill2 as action"| |((firstPlayer skill2 skillName) = 'Ravage') & (Ravage new manaUsage <= firstPlayer mana ) & (firstPlayer skill2 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 380).		firstPlayer mana: (firstPlayer mana - 325).		firstPlayer skill2 coolDown: (firstPlayer skill2 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill2 skillName).		].	((firstPlayer skill2 skillName) = 'ManaBurn') & (ManaBurn new manaUsage <= firstPlayer mana ) & (firstPlayer skill2 coolDown = 0) ifTrue: [		secondPlayer mana: ((secondPlayer mana - (0.2 * (secondPlayer mana))) roundTo: 1).		firstPlayer mana: (firstPlayer mana - 325).		firstPlayer skill2 coolDown: (firstPlayer skill2 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill2 skillName).		].	((firstPlayer skill2 skillName) = 'FingerOfDeath') & (FingerOfDeath new manaUsage <= firstPlayer mana ) & (firstPlayer skill2 coolDown = 0) ifTrue: [		secondPlayer hp: (secondPlayer hp - 850).		firstPlayer mana: (firstPlayer mana - 650).		firstPlayer skill2 coolDown: (firstPlayer skill2 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill2 skillName).		].		((firstPlayer skill2 skillName) = 'PulseNova') & (PulseNova new manaUsage <= firstPlayer mana ) & (firstPlayer skill2 coolDown = 0) ifTrue: [						firstPlayer skill2 coolDown: (firstPlayer skill2 maxCoolDown).		firstPlayer lastAction: (firstPlayer skill2 skillName).		].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:32'!action2For5: firstPlayer second: secondPlayer"This function runs if secondPlayer choose its skill2 as action"| |((secondPlayer skill2 skillName) = 'GodsStrength') & (GodsStrenght new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [						secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].	((secondPlayer skill2 skillName) = 'EnchantTotem') & (EnchantTotem new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [				secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].	((secondPlayer skill2 skillName) = 'SacredArrow') & (SacredArrow new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [				secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].	((secondPlayer skill2 skillName) = 'ManaVoid') & (ManaVoid new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [		firstPlayer hp: ((1.1 * (firstPlayer maxMana - (firstPlayer mana))) roundTo: 1).		secondPlayer mana: (secondPlayer mana - 275).		secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].	((secondPlayer skill2 skillName) = 'FreezingField') & (FreezingField new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [		firstPlayer hp: (firstPlayer hp - 800).		secondPlayer mana: (secondPlayer mana - 600).		secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].	((secondPlayer skill2 skillName) = 'Multicast') & (Multicast new manaUsage <= firstPlayer mana ) & (secondPlayer skill2 coolDown = 0) ifTrue: [				secondPlayer skill2 coolDown: (secondPlayer skill2 maxCoolDown).		secondPlayer lastAction: (secondPlayer skill2 skillName).		].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:18'!chooseFirstPlayer"Shows a list of heros to make selection"|scourgeList firstPlayerChoice|scourgeList := #('Leshrac' 'Lion' 'Mortred' 'NyxAssassin' 'Skeleton King' 'Tidehunter').firstPlayerChoice := UIManager default chooseFrom: scourgeList message: 'Choose a hero from Scourge list for Player 1'.firstPlayerChoice = 1ifTrue:[^Leshrac  new.].firstPlayerChoice = 2ifTrue:[^Lion  new.].firstPlayerChoice = 3ifTrue:[^Mortred  new.].firstPlayerChoice = 4ifTrue:[^NyxAssassin  new.].firstPlayerChoice = 5ifTrue:[^SkeletonKing new.].firstPlayerChoice = 6ifTrue:[^Tidehunter  new.].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:18'!chooseSecondPlayer"Shows a list of heros to make selection"|sentinelList secondPlayerChoice|sentinelList := #('EarthShaker' 'Magina' 'Mirana' 'Ogre Magi' 'Rylai' 'Sven').secondPlayerChoice := UIManager default chooseFrom: sentinelList message: 'Choose a hero from Sentinel list for Player 2'.secondPlayerChoice = 1ifTrue:[^EarthShaker  new.].secondPlayerChoice = 2ifTrue:[^Magina new.].secondPlayerChoice = 3ifTrue:[^Mirana  new.].secondPlayerChoice = 4ifTrue:[^OgreMagi  new.].secondPlayerChoice = 5ifTrue:[^Rylai  new.].secondPlayerChoice = 6ifTrue:[^Sven  new.].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:21'!showChooseItem: firstPlayer"Shows itemList for players to select items"|manaPotNum1 healthPotNum1 slotFirst itemList chosenItemFirst|manaPotNum1 := 0.healthPotNum1 := 0. slotFirst := 1.[ slotFirst <5 & (firstPlayer gold > 199)] whileTrue: [  	itemList := GameArena itemList: firstPlayer .	chosenItemFirst  := UIManager default chooseFrom: itemList message: ('Choose ', slotFirst asString ,  '. Item for Player 1').chosenItemFirst  = 1ifTrue: [ GameArena chooseItem: firstPlayer item: BattleFury number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', BattleFury asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr. 		].chosenItemFirst  = 2ifTrue: [GameArena chooseItem: firstPlayer item: Butterfly number: slotFirst. 	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', Butterfly asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr. 	].chosenItemFirst  = 3ifTrue: [GameArena chooseItem: firstPlayer item: Daedalus number: slotFirst. 	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', Daedalus asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr. 	].chosenItemFirst  = 4ifTrue: [GameArena chooseItem: firstPlayer item: Desolator number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', Desolator asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].chosenItemFirst  = 5ifTrue: [GameArena chooseItem: firstPlayer item: EnergyBooster number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', EnergyBooster asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr. 	].chosenItemFirst  = 6ifTrue: [GameArena chooseItem: firstPlayer item: HealthPotion number: slotFirst.	firstPlayer  healthPot: (firstPlayer  healthPot + 1).	healthPotNum1 := healthPotNum1 + 1.	((healthPotNum1 \\ 2) == 1) ifTrue: [slotFirst := slotFirst +1.].	Transcript show: ('Player chose ', HealthPotion asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].chosenItemFirst  = 7ifTrue: [GameArena chooseItem: firstPlayer item: HeartOfTarrasque number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', HeartOfTarrasque asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].chosenItemFirst  = 8ifTrue: [GameArena chooseItem: firstPlayer item: HoodOfDefiance number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', HoodOfDefiance asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr. 	].chosenItemFirst  = 9ifTrue: [GameArena chooseItem: firstPlayer item: ManaPotion number: slotFirst.	firstPlayer  manaPot: (firstPlayer  manaPot + 1).	manaPotNum1  := manaPotNum1 + 1.	((manaPotNum1 \\ 2) == 1) ifTrue: [slotFirst := slotFirst +1.].	Transcript show: ('Player chose ', ManaPotion asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].chosenItemFirst   = 10ifTrue: [GameArena chooseItem: firstPlayer item: Vanguard number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', Vanguard asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].chosenItemFirst = 11ifTrue: [GameArena chooseItem: firstPlayer item: VitalityBooster number: slotFirst.	slotFirst := slotFirst +1.	Transcript show: ('Player chose ', VitalityBooster asString, ' Remaining gold = ', firstPlayer gold asString, ' Remaining Slot = ', (5 - slotFirst) asString );cr.  	].].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:19'!chooseItem: player item: item number: number"This method handles the addition of chosen items to the heros item list"player setItemList: (item new) number: number. 	player gold: (player gold - (item new gold)).! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/19/2017 02:17'!checkCoolDownSkill2: player"This method handles coolDown decrement for second skills"(player skill2 coolDown > 0) ifTrue: [ player skill2 coolDown: (player skill2 coolDown - 1) ].! !DotA subclass: #Hero	instanceVariableNames: 'name side lastAction gold maxGold hp maxHp mana maxMana skill1 skill2 item1 item2 item3 item4 armor minDamage maxDamage healthPot manaPot'	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Hero commentStamp: 'mehmetsefa 4/26/2017 02:09' prior: 0!I am a base class for all the heroes    Instance Variables	armor:		<Object>	damage:		<Object>	hp:		<Object>	mana:		<Object>	name:		<Object>	side:		<Object>	skill1:		<Object>	skill2:		<Object> !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:10'!armor: anObject	armor := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:36'!maxMana: anObject	maxMana := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!mana: anObject	mana := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:36'!maxHp: anObject	maxHp := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:32'!gold: anObject	gold := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item3	^ item3! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/16/2017 23:14'!damage	^ (minDamage to: maxDamage) atRandom ! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item2	^ item2! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!damageCalculate	^ damageCalculate! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:12'!skill2: anObject	skill2 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:36'!maxMana	^ maxMana! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item2: anObject	item2 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:36'!maxHp	^ maxHp! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:12'!skill1	^ skill1! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:36'!maxGold	^ maxGold! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:59'!damage: damage enemyarmor: enemyarmor	^((damage * (1-((0.06*enemyarmor)/(1+(0.06*enemyarmor)))))) roundTo: 1! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!damageCalculate: anObject	damageCalculate := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 18:53'!healthPot: anObject	healthPot := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 02:27'!lastAction: anObject	lastAction := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 18:53'!manaPot: anObject	manaPot := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item3: anObject	item3 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:32'!gold	^ gold! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:12'!name	^ name! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:10'!armor	^ armor! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:11'!name: anObject	name := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:55'!mana	^ mana! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:12'!skill1: anObject	skill1 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 02:27'!lastAction	^ lastAction! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item1	^ item1! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:11'!hp: anObject	hp := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item4: anObject	item4 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 18:53'!healthPot	^ healthPot! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:37'!maxDamage: anObject	maxDamage := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:12'!skill2	^ skill2! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 04:37'!maxDamage	^ maxDamage! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:36'!maxGold: anObject	maxGold := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 18:53'!manaPot	^ manaPot! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item4	^ item4! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 01:41'!setItemList:  newItem number: itemNumber(itemNumber = 1) ifTrue: [ item1 := newItem .].(itemNumber = 2) ifTrue: [ item2 := newItem .].(itemNumber = 3) ifTrue: [ item3 := newItem .].(itemNumber = 4) ifTrue: [ item4 := newItem .].! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:00'!item1: anObject	item1 := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:10'!damage: anObject	damage := anObject! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:11'!name1	^ name! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 4/26/2017 02:11'!hp	^ hp! !!Hero methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 14:55'!initialize^self subclassResponsibility.! !DotA subclass: #Item	instanceVariableNames: 'name gold effect'	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Item commentStamp: 'mehmetsefa 4/26/2017 02:38' prior: 0!I am the base class for all the Items.    Instance Variables	cost:		<Object>	effect:		<Object>	name:		<Object>!!Item methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!effect: anObject	effect := anObject! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:45'!gold: anObject	gold := anObject! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!name: anObject	name := anObject! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 5/19/2017 00:43'!name	^ name! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!effect	^ effect! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!name1	^ name! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 5/15/2017 05:45'!gold	^ gold! !!Item methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:04'!initialize! !Item subclass: #BattleFury	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!BattleFury commentStamp: 'mehmetsefa 4/26/2017 19:47' prior: 0!I am BattleFury.!!BattleFury methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:02'!initializegold := 4500.! !Item subclass: #Butterfly	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Butterfly commentStamp: 'mehmetsefa 4/26/2017 19:52' prior: 0!I am Butterfly.!!Butterfly methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:03'!initializegold := 5500.! !Item subclass: #Daedalus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Daedalus commentStamp: 'mehmetsefa 4/26/2017 19:52' prior: 0!I am Daedalus.!!Daedalus methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:03'!initializegold := 5500.! !Item subclass: #Desolator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Desolator commentStamp: 'mehmetsefa 4/26/2017 19:53' prior: 0!I am Desolator.!!Desolator methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:03'!initializegold := 4000.! !Item subclass: #EnergyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!EnergyBooster commentStamp: 'mehmetsefa 4/26/2017 19:51' prior: 0!I am EnergyBooster.!!EnergyBooster methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:04'!initializegold := 1100.! !Item subclass: #HealthPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!HealthPotion commentStamp: 'mehmetsefa 4/26/2017 19:56' prior: 0!I am HealthPotion.!!HealthPotion methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:04'!initializegold := 200.! !Item subclass: #HeartOfTarrasque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!HeartOfTarrasque commentStamp: 'mehmetsefa 4/26/2017 19:55' prior: 0!I am HeartOfTarrasque.!!HeartOfTarrasque methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:04'!initializegold := 5600.! !Item subclass: #HoodOfDefiance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!HoodOfDefiance commentStamp: 'mehmetsefa 4/26/2017 19:48' prior: 0!I am HoodOfDefiance.!!HoodOfDefiance methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:04'!initializegold := 2000.! !Item subclass: #ManaPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!ManaPotion commentStamp: 'mehmetsefa 4/26/2017 19:56' prior: 0!I am ManaPotion.!!ManaPotion methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 20:14'!initializegold := 200.! !PackageManifest subclass: #Manifest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Manifest commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Manifest class	instanceVariableNames: ''!!Manifest class methodsFor: 'code-critics' stamp: 'mehmetsefa 5/16/2017 04:19'!ruleRBLongMethodsRuleV1FalsePositive	^ #(#(#(#RGMetaclassDefinition #(#'GameArena class' #GameArena)) #'2017-05-16T04:19:53.990166+03:00') )! !!Manifest class methodsFor: 'code-critics' stamp: 'mehmetsefa 5/16/2017 04:19'!ruleRBTempsReadBeforeWrittenRuleV1FalsePositive	^ #(#(#(#RGMetaclassDefinition #(#'GameArena class' #GameArena)) #'2017-05-16T04:19:58.845166+03:00') )! !!Manifest class methodsFor: 'code-critics' stamp: 'mehmetsefa 5/15/2017 02:41'!ruleRBExcessiveVariablesRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Hero)) #'2017-05-15T02:41:34.107643+03:00') )! !Hero subclass: #Scourge	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Scourge commentStamp: 'mehmetsefa 4/26/2017 02:39' prior: 0!I am Scourge.    Implementation Points!!Scourge methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 4/28/2017 01:02'!initialize! !Scourge subclass: #Leshrac	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Leshrac commentStamp: 'mehmetsefa 4/26/2017 14:11' prior: 0!I am Leshrac.!!Leshrac methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Leshrac'.side := 'Scourge'.maxHp := 1518.maxMana := 1534.skill1 := SplitEarth new.skill2 := PulseNova new.armor := 12.minDamage := 133.mana := maxMana.gold := maxGold .hp := maxHp .self maxDamage: 137.! !Scourge subclass: #Lion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Lion commentStamp: 'mehmetsefa 4/26/2017 14:10' prior: 0!I am Lion.!!Lion methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Lion'.side := 'Scourge'.maxHp := 1609.maxMana := 1456.skill1 := EarthSpike  new.skill2 := FingerOfDeath  new.armor := 9.minDamage := 139.mana := maxMana.gold := maxGold .hp := maxHp .self maxDamage: 145.! !Scourge subclass: #Mortred	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Mortred commentStamp: 'mehmetsefa 4/26/2017 14:09' prior: 0!I am Mortred.!!Mortred methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Mortred'.side := 'Scourge'.maxHp := 1754.maxMana := 892.skill1 := Blur  new.skill2 := CoupDeGrace  new.armor := 18.minDamage := 142.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 144.! !Scourge subclass: #NyxAssassin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!NyxAssassin commentStamp: 'mehmetsefa 4/26/2017 14:08' prior: 0!I am Nyx Assassin.!!NyxAssassin methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'NyxAssassin'.side := 'Scourge'.maxHp := 1784.maxMana := 1149.skill1 := Impale  new.skill2 := ManaBurn  new.armor := 14.minDamage := 122.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 126.! !Hero subclass: #Sentinel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Sentinel commentStamp: 'mehmetsefa 4/26/2017 02:40' prior: 0!I am Sentinel.    Implementation Points!!Sentinel methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 4/28/2017 01:03'!initialize! !Sentinel subclass: #EarthShaker	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!EarthShaker commentStamp: 'mehmetsefa 4/26/2017 14:12' prior: 0!I am EarthShaker.!!EarthShaker methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'EarthShaker'.side := 'Sentinel'.maxHp := 2270.maxMana := 1030.skill1 := Fissure  new.skill2 := EnchantTotem  new.armor := 10.minDamage := 136.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 146.! !Sentinel subclass: #Magina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Magina commentStamp: 'mehmetsefa 4/26/2017 14:13' prior: 0!I am Magina.!!Magina methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Magina'.side := 'Sentinel'.maxHp := 1495.maxMana := 1017.skill1 := ManaBreak   new.skill2 := ManaVoid   new.armor := 14.minDamage := 136.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 140.! !Sentinel subclass: #Mirana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Mirana commentStamp: 'mehmetsefa 4/26/2017 14:12' prior: 0!I am Mirana.!!Mirana methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Mirana'.side := 'Sentinel'.maxHp := 1697.maxMana := 996.skill1 := StarStorm   new.skill2 := SacredArrow   new.armor := 16.minDamage := 137.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 148.! !Sentinel subclass: #OgreMagi	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!OgreMagi commentStamp: 'mehmetsefa 4/26/2017 14:13' prior: 0!I am OgreMagi.!!OgreMagi methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Ogre Magi'.side := 'Sentinel'.maxHp := 2426.maxMana := 1105.skill1 := FireBlast   new.skill2 := Multicast   new.armor := 16.gold := maxGold .minDamage := 126.mana := maxMana.hp := maxHp .self maxDamage: 132.! !Sentinel subclass: #Rylai	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Rylai commentStamp: 'mehmetsefa 4/26/2017 14:13' prior: 0!I am Rylai.!!Rylai methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:23'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Rylai'.side := 'Sentinel'.maxHp := 1609.maxMana := 1373.skill1 := FrostBite   new.skill2 := FreezingField   new.armor := 10.gold := maxGold .minDamage := 136.mana := maxMana.hp := maxHp .self maxDamage: 146.! !Scourge subclass: #SkeletonKing	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!SkeletonKing commentStamp: 'mehmetsefa 4/26/2017 02:17' prior: 0!I am the hero skeletonking. I am Scourge, 	my hp is 2270, 	my mana is 993, 	my skill1  is wraithfire blast. 	my skill2  is vampiric aura,	my armor 11, 	my damage 151-153.!!SkeletonKing methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Skeleton King'.side := 'Scourge'.maxHp := 2270.maxMana := 993.skill1 := WraithfireBlast new.skill2 := VampiricAura new.armor := 11.minDamage := 151.gold := maxGold .hp := maxHp .mana := maxMana.self maxDamage: 153.! !DotA subclass: #Skill	instanceVariableNames: 'skillName type damage heal damageChance damageMult damageFunc decreaseAttack decreaseMana decreaseManaPerc damageNext evasion coolDown manaUsage maxCoolDown'	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Skill commentStamp: 'mehmetsefa 4/27/2017 23:32' prior: 0!I am the base class for all the skills.    !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 5/16/2017 21:41'!maxCoolDown	^ maxCoolDown! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!damageNext	^ damageNext! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!coolDown	^ coolDown! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!stun	^ stun! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!damage	^ damage! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 5/16/2017 21:41'!maxCoolDown: anObject	maxCoolDown := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!heal	^ heal! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!skillName	^ skillName! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!stun: anObject	stun := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!decreaseAttack	^ decreaseAttack! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!manaUsage	^ manaUsage! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!coolDown: anObject	coolDown := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!manaUsage: anObject	manaUsage := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!type: anObject	type := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!type	^ type! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!decreaseMana: anObject	decreaseMana := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!skillName: anObject	skillName := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!damageNext: anObject	damageNext := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!heal: anObject	heal := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!evasion: anObject	evasion := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!damage: anObject	damage := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!evasion	^ evasion! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!decreaseAttack: anObject	decreaseAttack := anObject! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 01:05'!initialize! !!Skill methodsFor: 'accessing' stamp: 'mehmetsefa 4/28/2017 00:56'!decreaseMana	^ decreaseMana! !Skill subclass: #AnchorSmash	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!AnchorSmash commentStamp: 'mehmetsefa 4/27/2017 12:13' prior: 0!I am AnchorSmash.!!AnchorSmash methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:21'!initializeskillName := 'AnchorSmash'.type := 'active'.damage := 225.decreaseAttack := 0.6 .coolDown := 0.maxCoolDown := 3.manaUsage := 60.! !Skill subclass: #Blur	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Blur commentStamp: 'mehmetsefa 4/27/2017 12:20' prior: 0!I am Blur.!!Blur methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:21'!initializeskillName := 'Blur'.type := 'passive'.evasion := 0.4 .manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !Skill subclass: #CoupDeGrace	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!CoupDeGrace commentStamp: 'mehmetsefa 4/27/2017 12:21' prior: 0!I am CoupDeGrace.!!CoupDeGrace methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:22'!initializeskillName := 'CoupDeGrace'.type := 'passive'.damageMult := 4.damageChance := 0.15 .manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !Skill subclass: #EarthSpike	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!EarthSpike commentStamp: 'mehmetsefa 4/27/2017 12:24' prior: 0!I am EarthSpike.!!EarthSpike methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:22'!initializeskillName := 'EarthSpike'.type := 'active'.damage := 260.coolDown := 0.manaUsage := 160.maxCoolDown := 5.! !Skill subclass: #EnchantTotem	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!EnchantTotem commentStamp: 'mehmetsefa 4/27/2017 12:19' prior: 0!I am EnchantTotem.!!EnchantTotem methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:22'!initializeskillName := 'EnchantTotem'.type := 'active'.damageChance := 4.damageNext := 1.coolDown := 0.manaUsage := 50.maxCoolDown := 5.! !Skill subclass: #FingerOfDeath	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!FingerOfDeath commentStamp: 'mehmetsefa 4/27/2017 12:24' prior: 0!I am FingerOfDeath.!!FingerOfDeath methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:22'!initializeskillName := 'FingerOfDeath'.type := 'active'.damage := 850.coolDown := 0.manaUsage := 650.maxCoolDown := 8.! !Skill subclass: #FireBlast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!FireBlast commentStamp: 'mehmetsefa 4/27/2017 12:27' prior: 0!I am FireBlast.!!FireBlast methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:22'!initializeskillName := 'FireBlast'.type := 'active'.damage := 220.coolDown := 0.manaUsage := 225.maxCoolDown := 5.! !Skill subclass: #Fissure	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Fissure commentStamp: 'mehmetsefa 4/27/2017 12:18' prior: 0!I am Fissure.!!Fissure methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'Fissure'.type := 'active'.damage := 260.coolDown := 0.manaUsage := 170.maxCoolDown := 5.! !Skill subclass: #FreezingField	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!FreezingField commentStamp: 'mehmetsefa 4/27/2017 12:27' prior: 0!I am FreezingField.!!FreezingField methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'FreezingField'.type := 'active'.damage := 800.coolDown := 0.manaUsage := 600.maxCoolDown := 8.! !Skill subclass: #FrostBite	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!FrostBite commentStamp: 'mehmetsefa 4/27/2017 12:26' prior: 0!I am FrostBite.!!FrostBite methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'FrostBite'.type := 'active'.damage := 300.coolDown := 0 .manaUsage := 150.maxCoolDown := 5.! !Skill subclass: #GodsStrenght	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!GodsStrenght commentStamp: 'mehmetsefa 4/27/2017 12:18' prior: 0!I am GodsStrength.!!GodsStrenght methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'GodsStrength'.type := 'active'.damageMult := 2.damageNext := 3.coolDown := 0.manaUsage := 200.maxCoolDown := 5.! !Skill subclass: #Impale	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Impale commentStamp: 'mehmetsefa 4/27/2017 12:19' prior: 0!I am Impale.!!Impale methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'Impale'.type := 'active'.damage := 260.coolDown := 0.manaUsage := 225.maxCoolDown := 5.! !Skill subclass: #ManaBreak	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!ManaBreak commentStamp: 'mehmetsefa 4/27/2017 12:22' prior: 0!I am ManaBreak.!!ManaBreak methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:23'!initializeskillName := 'ManaBreak'.type := 'passive'.decreaseMana := 100.manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !Skill subclass: #ManaBurn	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!ManaBurn commentStamp: 'mehmetsefa 4/27/2017 12:19' prior: 0!I am ManaBurn.!!ManaBurn methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'ManaBurn'.type := 'active'.decreaseManaPerc := 0.2 .coolDown := 0.manaUsage := 50.maxCoolDown := 5.! !Skill subclass: #ManaVoid	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!ManaVoid commentStamp: 'mehmetsefa 4/27/2017 12:23' prior: 0!I am ManaVoid.!!ManaVoid methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'ManaVoid'.type := 'active'.damageFunc := true.coolDown := 0.manaUsage := 275.maxCoolDown := 7.! !!ManaVoid methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 22:49'!damageEnemy: missingMana^1.1 * missingMana .! !Skill subclass: #Multicast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Multicast commentStamp: 'mehmetsefa 4/27/2017 12:28' prior: 0!I am Multicast.!!Multicast methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'Multicast'.type := 'passive'.damageMult := 3.damageChance := 0.25 .manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !Skill subclass: #PulseNova	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!PulseNova commentStamp: 'mehmetsefa 4/27/2017 12:25' prior: 0!I am PulseNova.!!PulseNova methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'PulseNova'.type := 'active'.manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !Skill subclass: #Ravage	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Ravage commentStamp: 'mehmetsefa 4/27/2017 12:14' prior: 0!I am Ravage.!!Ravage methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'Ravage'.type := 'active'.damage := 380.coolDown := 0.manaUsage := 325.maxCoolDown := 8.! !Skill subclass: #SacredArrow	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!SacredArrow commentStamp: 'mehmetsefa 4/27/2017 12:22' prior: 0!I am SacredArrow.!!SacredArrow methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'SacredArrow'.type := 'active'.damage := 320.damageChance := 0.75.coolDown := 0.manaUsage := 100.maxCoolDown := 4.! !Skill subclass: #SplitEarth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!SplitEarth commentStamp: 'mehmetsefa 4/27/2017 12:25' prior: 0!I am SplitEarth.!!SplitEarth methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'SplitEarth'.type := 'active'.damage := 300.coolDown := 0.manaUsage := 160.maxCoolDown := 5.! !Skill subclass: #StarStorm	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!StarStorm commentStamp: 'mehmetsefa 4/27/2017 12:21' prior: 0!I am StarStorm.!!StarStorm methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:24'!initializeskillName := 'StarStorm'.type := 'active'.damage := 300.coolDown := 0.manaUsage := 160.maxCoolDown := 4.! !Skill subclass: #StormHammer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!StormHammer commentStamp: 'mehmetsefa 4/27/2017 12:15' prior: 0!I am StormHammer.!!StormHammer methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:25'!initializeskillName := 'StormHammer'.type := 'active'.damage := 325.coolDown := 0.manaUsage := 140.maxCoolDown := 5.! !Sentinel subclass: #Sven	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Sven commentStamp: 'mehmetsefa 4/26/2017 14:11' prior: 0!I am Sven.!!Sven methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:23'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Sven'.side := 'Sentinel'.maxHp := 2198.maxMana := 874.skill1 := StormHammer   new.skill2 := GodsStrenght   new.armor := 14.minDamage := 149.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 151.! !Scourge subclass: #Tidehunter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Tidehunter commentStamp: 'mehmetsefa 4/26/2017 14:07' prior: 0!I am Tidehunter.!!Tidehunter methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 14:22'!initializemanaPot := 0.healthPot := 0.maxGold := 11000.name := 'Tidehunter'.side := 'Scourge'.maxHp := 2316.maxMana := 998.skill1 := AnchorSmash  new.skill2 := Ravage  new.armor := 11.minDamage := 139.gold := maxGold .mana := maxMana.hp := maxHp .self maxDamage: 145.! !Skill subclass: #VampiricAura	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!VampiricAura commentStamp: 'mehmetsefa 4/27/2017 12:12' prior: 0!I am VampiricAura.!!VampiricAura methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:25'!initializeskillName := 'VampiricAura'.type := 'passive'.manaUsage := 0.coolDown := 0.maxCoolDown := 0.! !!VampiricAura methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 23:09'!healPerc: givenDamage^givenDamage * 0.15 .! !Item subclass: #Vanguard	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!Vanguard commentStamp: 'mehmetsefa 4/26/2017 19:54' prior: 0!I am Vanguard.!!Vanguard methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:05'!initializegold := 2500.! !Item subclass: #VitalityBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!VitalityBooster commentStamp: 'mehmetsefa 4/26/2017 19:51' prior: 0!I am VitalityBooster.!!VitalityBooster methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/15/2017 15:05'!initializegold := 1200.! !Skill subclass: #WraithfireBlast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2016400372'!!WraithfireBlast commentStamp: 'mehmetsefa 4/27/2017 12:11' prior: 0!I am Wraithfire Blast.!!WraithfireBlast methodsFor: 'as yet unclassified' stamp: 'mehmetsefa 5/16/2017 21:25'!initializeskillName := 'WraithfireBlast'.type := 'active'.damage := 300.coolDown := 0.manaUsage := 140.maxCoolDown := 5.! !